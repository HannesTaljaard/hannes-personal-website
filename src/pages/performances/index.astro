---
import { NAME } from "../../constants";
import Layout from "../../layouts/Layout.astro";
import { Image } from 'astro:assets';
import ribbonPerformances from '../../images/Ribbon-3-Performances.webp';
// Icons managed with astro-icon + icon package (@iconify-json/ph)
import { Icon } from 'astro-icon/components';
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { formatDate } from "../../utils";

// Sorted by Date descending
const allPerformances: CollectionEntry<'performances'>[] = (await getCollection('performances'))
    .sort((a:CollectionEntry<'performances'>, b:CollectionEntry<'performances'>) =>
    b.data.performanceDate.valueOf() - a.data.performanceDate.valueOf());

const performancesPerYear = new Map<string, CollectionEntry<'performances'>[]>();

allPerformances.map(performance => {
    if (performancesPerYear.has(performance.data.performanceDate.getFullYear())) {
        let performancesPerOneYear: CollectionEntry<'performances'>[] = performancesPerYear.get(performance.data.performanceDate.getFullYear())!;
        performancesPerOneYear.push(performance);
        performancesPerYear.set(performance.data.performanceDate.getFullYear(), performancesPerOneYear);
        return;
    }
    performancesPerYear.set(performance.data.performanceDate.getFullYear(), [performance]);
});

// allPerformances.map(performance => {
//     const {Content} = performance.render();
//     console.log(Content);
// })


// An array of available years i.e. years in which at least one performance happened
const years = Array.from(performancesPerYear.keys());

const title = 'Performances - ' + NAME;
const description = "Performances"; // TODO
---

<Layout title={title}, description={description} current="performances">
    <div class="container max-w-[1120px] flex flex-col mx-auto p-4">
        <Image src={ribbonPerformances} alt="Ribbon Performances" />

        <h1 class="text-3xl lg:text-5xl font-bold mt-10 mb-8">Performances</h1>

        <ul class="flex flex-row flex-nowrap overflow-x-auto space-x-4 mb-8">
            {years.map(year => (
                <a href={'#year-' + year}>
                    <li class="flex flex-row flex-nowrap items-center space-x-1 text-gray-400 hover:text-black">
                        <span class="uppercase text-nowrap">{year}</span>
                        <Icon name="prime--arrow-down" />
                    </li>
                </a>
            ))}
        </ul>


        {years.map(year => (
            <h2 id={'year-' + year} class="text-2xl font-bold mb-6">{year}</h2>
            <div class="flex flex-col space-y-12 mb-20">
                {performancesPerYear.get(year)!.map(async (performance) => {
                const {Content} = await performance.render()
                return (
                    <div class="font-serif">
                        <div class="text-sm font-sans text-gray-500 mb-2 tracking-widest">{performance.data.kind === 'composition-performance' ? 'MY COMPOSITION & MY PERFORMANCE' : 'MY ' + performance.data.kind.toUpperCase()}</div>
                        <div class="text-xl font-medium mb-2">{performance.data.title}</div>
                        <div class="mb-4">
                            {performance.data.performer.map((performer: string) => (
                            <div class="font-medium">{performer.split(",")[0]}<span class=" text-gray-500">, {performer.split(",")[1]}</span></div>
                            ))}
                        </div>
                        <div class="text-gray-500">
                            <div class="text-sm mb-1">{formatDate(performance.data.performanceDate)}</div>
                            <div class="text-sm mb-4">{performance.data.location}</div>
                        </div>
                        <div class="[&_a]:text-blue-800 [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:no-underline">
                            <Content />
                        </div>
                    </div>  
                )
                })}
            </div>
        ))}

    </div>
</Layout>